Fix Intel CQM when running under Xen

When running as dom0, x86_pmu is NULL and software events are used as a
fallback.  However, the events_sysfs_show callback uses x86_pmu and is
also used by the Intel Cache Monitoring perf events subsystem and so
running perf hits a NULL pointer on machines which support this
technology. Fix this by rearranging the function to avoid using x86_pmu
when the attribute has an event string set (which covers all the uses by
intel_cqm).
diff --git a/arch/x86/kernel/cpu/perf_event.c b/arch/x86/kernel/cpu/perf_event.c
index e50a666..1cb57ae 100644
--- a/arch/x86/kernel/cpu/perf_event.c
+++ b/arch/x86/kernel/cpu/perf_event.c
@@ -1596,13 +1596,12 @@ ssize_t events_sysfs_show(struct device *dev, struct device_attribute *attr,
 {
 	struct perf_pmu_events_attr *pmu_attr = \
 		container_of(attr, struct perf_pmu_events_attr, attr);
-	u64 config = x86_pmu.event_map(pmu_attr->id);
 
 	/* string trumps id */
 	if (pmu_attr->event_str)
 		return sprintf(page, "%s", pmu_attr->event_str);
 
-	return x86_pmu.events_sysfs_show(page, config);
+	return x86_pmu.events_sysfs_show(page, x86_pmu.event_map(pmu_attr->id));
 }
 
 EVENT_ATTR(cpu-cycles,			CPU_CYCLES		);
